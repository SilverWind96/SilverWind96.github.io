{"version":3,"sources":["./src/environments/environment.ts","./src/app/new-recipe/new-recipe.component.ts","./src/app/new-recipe/new-recipe.component.html","./src/app/edit/edit.component.ts","./src/app/edit/edit.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/recipes/recipes.component.ts","./src/app/recipes/recipes.component.html","./src/app/recipes-array.service.ts","./src/app/recipe-detail/recipe-detail.component.ts","./src/app/recipe-detail/recipe-detail.component.html","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/shopping-list/shopping-list.component.ts","./src/app/shopping-list/shopping-list.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RecipesArrayService } from '../recipes-array.service';\n\n@Component({\n  selector: 'app-new-recipe',\n  templateUrl: './new-recipe.component.html',\n  styleUrls: ['./new-recipe.component.scss'],\n})\nexport class NewRecipeComponent implements OnInit {\n  // @Output() recipeOutput = new EventEmitter();\n  submitted = false;\n  constructor(\n    private router: Router,\n    private recipesService: RecipesArrayService\n  ) {}\n  formRecipe: FormGroup;\n  img = document.createElement('img');\n  checkImg(): boolean {\n    this.img.src = this.formRecipe.get('img').value;\n    if (this.img.height > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  ngOnInit(): void {\n    this.formRecipe = new FormGroup({\n      name: new FormControl('', Validators.required),\n      img: new FormControl('', Validators.required),\n      des: new FormControl('', Validators.required),\n      ingredients: new FormArray([]),\n    });\n  }\n  cancel(): void {\n    this.router.navigate(['/recipes']);\n  }\n  initIngredients(): any {\n    return new FormGroup({\n      ingreName: new FormControl('', Validators.required),\n      ingreQuantity: new FormControl('', [\n        Validators.required,\n        Validators.pattern('[0-9]+'),\n      ]),\n    });\n  }\n  add(): void {\n    const control = this.formRecipe.get('ingredients') as FormArray;\n    control.push(this.initIngredients());\n  }\n  onSubmit(): void {\n    this.recipesService.saveRecipes(this.formRecipe.value);\n    this.router.navigate(['/recipes']);\n  }\n  getIngredients(form): any {\n    return form.controls.ingredients.controls;\n  }\n  removeIngredient(index: number): void {\n    const control = this.formRecipe.get('ingredients') as FormArray;\n    control.removeAt(index);\n  }\n}\n","<div class=\"container-ct\">\n  <div class=\"row\">\n    <div class=\"col-5\">\n      <button routerLink=\"/new-recipe\" class=\"btn btn-success\">\n        New Recipe\n      </button>\n    </div>\n    <div class=\"col-7\">\n      <form [formGroup]=\"formRecipe\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <button\n              class=\"btn btn-success\"\n              (click)=\"submitted = true\"\n              [disabled]=\"formRecipe.invalid\"\n            >\n              Save\n            </button>\n            <button class=\"btn btn-danger\" type=\"button\" (click)=\"cancel()\">\n              Cancel\n            </button>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <label for=\"name\"><b>Name</b></label>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <input\n              type=\"text\"\n              id=\"name\"\n              class=\"form-control\"\n              formControlName=\"name\"\n              placeholder=\"Enter your name\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <label for=\"image\"><b>Image URL</b></label>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <input\n              type=\"text\"\n              id=\"image\"\n              class=\"form-control\"\n              formControlName=\"img\"\n              placeholder=\"Enter your image URL\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <img *ngIf=\"checkImg()\" src=\"{{ formRecipe.get('img').value }}\" />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <label for=\"des\"><b>Description</b></label>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <textarea\n              type=\"text\"\n              id=\"des\"\n              cols=\"30\"\n              rows=\"5\"\n              class=\"form-control\"\n              formControlName=\"des\"\n              placeholder=\"Enter your description\"\n            ></textarea>\n          </div>\n        </div>\n        <div formArrayName=\"ingredients\">\n          <div\n            class=\"row ingredient\"\n            *ngFor=\"let ingredient of getIngredients(formRecipe); let i = index\"\n            [formGroupName]=\"i\"\n          >\n            <div class=\"col-9\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                formControlName=\"ingreName\"\n                placeholder=\"Enter your ingredient name\"\n              />\n            </div>\n            <div class=\"col-2\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                formControlName=\"ingreQuantity\"\n                placeholder=\"Quantity\"\n              />\n            </div>\n            <div class=\"col-1\">\n              <button\n                type=\"button\"\n                class=\"btn btn-danger\"\n                (click)=\"removeIngredient(i)\"\n              >\n                X\n              </button>\n            </div>\n          </div>\n        </div>\n        <button\n          type=\"button\"\n          id=\"addIngredient\"\n          class=\"btn btn-success\"\n          (click)=\"add()\"\n        >\n          Add Ingredient\n        </button>\n      </form>\n    </div>\n  </div>\n  <!-- <p>{{ formRecipe.value | json }}</p> -->\n</div>\n","import { RecipesArrayService } from './../recipes-array.service';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.scss'],\n})\nexport class EditComponent implements OnInit, OnDestroy {\n  index: number;\n  private sub: any;\n  submitted = false;\n  constructor(\n    private router: Router,\n    private recipesService: RecipesArrayService,\n    private route: ActivatedRoute\n  ) {}\n  formRecipe: FormGroup;\n  img = document.createElement('img');\n  retrievedForm = [];\n  checkImg(): boolean {\n    this.img.src = this.formRecipe.get('img').value;\n    if (this.img.height > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  ngOnInit(): void {\n    this.sub = this.route.params.subscribe((param) => {\n      this.index = +param['id'];\n    });\n    this.formRecipe = new FormGroup({\n      name: new FormControl('', Validators.required),\n      img: new FormControl('', Validators.required),\n      des: new FormControl('', Validators.required),\n      ingredients: new FormArray([]),\n    });\n    this.retrievedForm = this.recipesService.retrieveArray();\n    this.formRecipe.get('name').setValue(this.retrievedForm[this.index].name);\n    this.formRecipe.get('img').setValue(this.retrievedForm[this.index].img);\n    this.formRecipe.get('des').setValue(this.retrievedForm[this.index].des);\n    this.retrievedForm[this.index].ingredients.forEach((elem) => {\n      const control = this.formRecipe.get('ingredients') as FormArray;\n      control.push(\n        new FormGroup({\n          ingreName: new FormControl(elem.ingreName, Validators.required),\n          ingreQuantity: new FormControl(elem.ingreQuantity, [\n            Validators.required,\n            Validators.pattern('[0-9]+'),\n          ]),\n        })\n      );\n    });\n  }\n  cancel(): void {\n    this.router.navigate(['/recipes']);\n  }\n  initIngredients(): any {\n    return new FormGroup({\n      ingreName: new FormControl('', Validators.required),\n      ingreQuantity: new FormControl('', [\n        Validators.required,\n        Validators.pattern('[0-9]+'),\n      ]),\n    });\n  }\n  add(): void {\n    const control = this.formRecipe.get('ingredients') as FormArray;\n    control.push(this.initIngredients());\n  }\n  onSubmit(): void {\n    // this.retrievedForm\n    this.recipesService.changeArrayByIndex(this.index, this.formRecipe.value);\n    this.router.navigate(['/recipes']);\n  }\n  getIngredients(form): any {\n    return form.controls.ingredients.controls;\n  }\n  removeIngredient(index: number): void {\n    const control = this.formRecipe.get('ingredients') as FormArray;\n    control.removeAt(index);\n  }\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n}\n","<div class=\"container-ct\">\n  <div class=\"row\">\n    <div class=\"col-5\">\n      <button routerLink=\"/new-recipe\" class=\"btn btn-success\">\n        New Recipe\n      </button>\n    </div>\n    <div class=\"col-7\">\n      <form [formGroup]=\"formRecipe\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <button\n              class=\"btn btn-success\"\n              (click)=\"submitted = true\"\n              [disabled]=\"formRecipe.invalid\"\n            >\n              Save\n            </button>\n            <button class=\"btn btn-danger\" type=\"button\" (click)=\"cancel()\">\n              Cancel\n            </button>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <label for=\"name\"><b>Name</b></label>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <input\n              type=\"text\"\n              id=\"name\"\n              class=\"form-control\"\n              formControlName=\"name\"\n              placeholder=\"Enter your name\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <label for=\"image\"><b>Image URL</b></label>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <input\n              type=\"text\"\n              id=\"image\"\n              class=\"form-control\"\n              formControlName=\"img\"\n              placeholder=\"Enter your image URL\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <img *ngIf=\"checkImg()\" src=\"{{ formRecipe.get('img').value }}\" />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <label for=\"des\"><b>Description</b></label>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <textarea\n              type=\"text\"\n              id=\"des\"\n              cols=\"30\"\n              rows=\"5\"\n              class=\"form-control\"\n              formControlName=\"des\"\n              placeholder=\"Enter your description\"\n            ></textarea>\n          </div>\n        </div>\n        <div formArrayName=\"ingredients\">\n          <div\n            class=\"row ingredient\"\n            *ngFor=\"let ingredient of getIngredients(formRecipe); let i = index\"\n            [formGroupName]=\"i\"\n          >\n            <div class=\"col-9\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                formControlName=\"ingreName\"\n                placeholder=\"Enter your ingredient name\"\n              />\n            </div>\n            <div class=\"col-2\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                formControlName=\"ingreQuantity\"\n                placeholder=\"Quantity\"\n              />\n            </div>\n            <div class=\"col-1\">\n              <button\n                type=\"button\"\n                class=\"btn btn-danger\"\n                (click)=\"removeIngredient(i)\"\n              >\n                X\n              </button>\n            </div>\n          </div>\n        </div>\n        <button\n          type=\"button\"\n          id=\"addIngredient\"\n          class=\"btn btn-success\"\n          (click)=\"add()\"\n        >\n          Add Ingredient\n        </button>\n      </form>\n    </div>\n  </div>\n  <!-- <p>{{ formRecipe.value | json }}</p> -->\n</div>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'Routing';\n  pages = [\n    { link: '/recipes', name: 'Recipes' },\n    { link: '/shopping-list', name: 'Shopping List' },\n  ];\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a class=\"navbar-brand\" routerLink=\"/recipes\">Recipe Book</a>\n  <div>\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\" *ngFor=\"let page of pages\">\n        <a\n          class=\"nav-link\"\n          [routerLink]=\"page.link\"\n          routerLinkActive=\"active\"\n          >{{ page.name }}</a\n        >\n      </li>\n    </ul>\n  </div>\n</nav>\n<router-outlet></router-outlet>\n","import { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { RecipesComponent } from './recipes/recipes.component';\nimport { ShoppingListComponent } from './shopping-list/shopping-list.component';\nimport { NewRecipeComponent } from './new-recipe/new-recipe.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RecipeDetailComponent } from './recipe-detail/recipe-detail.component';\nimport { EditComponent } from './edit/edit.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFoundComponent,\n    RecipesComponent,\n    ShoppingListComponent,\n    NewRecipeComponent,\n    RecipeDetailComponent,\n    EditComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RecipesArrayService } from '../recipes-array.service';\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.scss'],\n})\nexport class RecipesComponent implements OnInit {\n  selected = -1;\n  constructor(private recipesService: RecipesArrayService) {}\n  img = document.createElement('img');\n  recipes = [];\n  ngOnInit(): void {\n    this.recipes = this.recipesService.retrieveArray();\n  }\n\n  checkImg(url): boolean {\n    this.img.src = url;\n    if (this.img.height > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","<div class=\"container-ct\">\n  <div class=\"row\">\n    <div class=\"col-5\">\n      <button routerLink=\"/new-recipe\" class=\"btn btn-success\">\n        New Recipe\n      </button>\n      <div\n        class=\"row recipe\"\n        *ngFor=\"let recipe of recipes; let i = index\"\n        (click)=\"selected = i\"\n        [class]=\"{ selected: selected === i }\"\n      >\n        <div class=\"col-9\">\n          <h3>{{ recipe.name }}</h3>\n          <p>{{ recipe.des }}</p>\n        </div>\n        <div class=\"col-3 image\">\n          <img *ngIf=\"checkImg(recipe.img)\" src=\"{{ recipe.img }}\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"col-7 d-flex justify-content-center\">\n      <h3 *ngIf=\"selected == -1\">Please select a Recipe!</h3>\n      <app-recipe-detail\n        *ngIf=\"selected != -1\"\n        [name]=\"recipes[selected].name\"\n        [imgUrl]=\"recipes[selected].img\"\n        [ingredients]=\"recipes[selected].ingredients\"\n        [description]=\"recipes[selected].des\"\n        [index]=\"selected\"\n        (setIndexAfterRemove)=\"selected = -1\"\n      ></app-recipe-detail>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RecipesArrayService {\n  recipesArray = [];\n  constructor() {}\n  saveRecipes(recipe: any): void {\n    this.recipesArray.push(recipe);\n  }\n  retrieveArray(): any {\n    return this.recipesArray;\n  }\n  changeArrayByIndex(index: number, array: any): void {\n    this.recipesArray[index] = array;\n  }\n  deleteByIndex(index: number): void {\n    this.recipesArray.splice(index, 1);\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { RecipesArrayService } from '../recipes-array.service';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.scss'],\n})\nexport class RecipeDetailComponent implements OnInit {\n  constructor(private recipeService: RecipesArrayService) {}\n  @Input() name;\n  @Input() imgUrl;\n  @Input() ingredients;\n  @Input() description;\n  @Input() index;\n  @Output() setIndexAfterRemove = new EventEmitter();\n  ngOnInit(): void {\n    // console.log(this.ingredients);\n  }\n  deleteByIndex(): void {\n    this.recipeService.deleteByIndex(this.index);\n    this.setIndexAfterRemove.emit();\n  }\n}\n","<img [src]=\"imgUrl\" />\n<h2>{{ name }}</h2>\n\n<div class=\"btn-group\">\n  <button\n    type=\"button\"\n    class=\"btn btn-primary dropdown-toggle\"\n    data-toggle=\"dropdown\"\n    aria-haspopup=\"true\"\n    aria-expanded=\"false\"\n  >\n    Manage Recipe\n  </button>\n  <div class=\"dropdown-menu\">\n    <a class=\"dropdown-item\" routerLink=\"/shopping-list\">To Shopping List</a>\n    <a class=\"dropdown-item\" [routerLink]=\"['/edit', index]\">Edit Recipe</a>\n    <a class=\"dropdown-item\" routerLink=\"/\" (click)=\"deleteByIndex()\"\n      >Delete Recipe</a\n    >\n  </div>\n</div>\n<p>{{ description }}</p>\n<input\n  *ngFor=\"let ingredient of ingredients\"\n  type=\"text\"\n  [value]=\"ingredient.ingreName + ' x ' + ingredient.ingreQuantity\"\n  disabled\n  class=\"form-control\"\n/>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { RecipesArrayService } from '../recipes-array.service';\n\n@Component({\n  selector: 'app-shopping-list',\n  templateUrl: './shopping-list.component.html',\n  styleUrls: ['./shopping-list.component.scss'],\n})\nexport class ShoppingListComponent implements OnInit {\n  constructor(private recipesService: RecipesArrayService) {}\n  selected = -1;\n\n  ingredientsArray = [];\n  retrievedArray = [];\n  ngOnInit(): void {\n    this.retrievedArray = this.recipesService.retrieveArray();\n    this.retrievedArray.forEach((recipe) => {\n      recipe.ingredients.forEach((ingredient) => {\n        this.ingredientsArray.push(ingredient);\n      });\n      console.log(recipe);\n    });\n    // console.log(this.retrievedArray);\n\n    // console.log(this.ingredientsArray);\n  }\n  onSubmit(form): void {\n    form.value = 'wtf';\n    console.log('====================================');\n    console.log(form);\n    console.log('====================================');\n  }\n  delete(): void {\n    this.ingredientsArray.splice(this.selected, 1);\n  }\n  update(amount: number): void {\n    this.ingredientsArray[this.selected].ingreQuantity = amount;\n  }\n}\n","<div class=\"container\">\n  <form #formShopping=\"ngForm\">\n    <div class=\"row\">\n      <div class=\"col-8\">\n        <div class=\"form-group\">\n          <label for=\"name\">Name</label\n          ><input\n            type=\"email\"\n            class=\"form-control\"\n            id=\"name\"\n            placeholder=\"Enter name\"\n            required\n            ngModel\n            name=\"name\"\n            #txtName\n            disabled\n          />\n        </div>\n      </div>\n      <div class=\"col-4\">\n        <div class=\"form-group\">\n          <label for=\"amount\">Amount</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"amount\"\n            placeholder=\"Amount\"\n            min=\"0\"\n            required\n            ngModel\n            name=\"amount\"\n            #txtAmount\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"selected == -1\">\n      <div class=\"col-12\">\n        <button type=\"button\" class=\"btn btn-success\" disabled>Add</button>\n        <button type=\"reset\" class=\"btn btn-primary\">Clear</button>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"selected != -1\">\n      <div class=\"col-12\">\n        <button\n          type=\"button\"\n          class=\"btn btn-success\"\n          (click)=\"update(txtAmount.value)\"\n        >\n          Update\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-danger\"\n          (click)=\"delete(); selected = -1\"\n        >\n          Delete\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-primary\"\n          (click)=\"txtAmount.value = 0\"\n        >\n          Clear\n        </button>\n      </div>\n    </div>\n  </form>\n  <div\n    *ngFor=\"let ingredient of ingredientsArray; let i = index\"\n    class=\"form-control\"\n    [class]=\"{ selected: selected === i }\"\n    (click)=\"\n      selected = i;\n      txtName.value = ingredient.ingreName;\n      txtAmount.value = ingredient.ingreQuantity\n    \"\n  >\n    <p>\n      {{ ingredient.ingreName + \" (\" + ingredient.ingreQuantity + \")\" }}\n    </p>\n  </div>\n</div>\n","import { ShoppingListComponent } from './shopping-list/shopping-list.component';\nimport { RecipesComponent } from './recipes/recipes.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { NewRecipeComponent } from './new-recipe/new-recipe.component';\nimport { EditComponent } from './edit/edit.component';\n\nconst routes: Routes = [\n  { path: 'recipes', component: RecipesComponent },\n  { path: 'shopping-list', component: ShoppingListComponent },\n  { path: '', redirectTo: '/recipes', pathMatch: 'full' },\n  { path: 'new-recipe', component: NewRecipeComponent },\n  { path: 'edit/:id', component: EditComponent },\n  { path: '**', component: PageNotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}