{"version":3,"sources":["./src/app/service/crud.service.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA2C;;;AAMpC,MAAM,WAAW;IACtB,YAAoB,YAA8B;QAA9B,iBAAY,GAAZ,YAAY,CAAkB;IAAG,CAAC;IACtD,iBAAiB,CAAC,MAAM;QACtB,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC9D,CAAC;IACD,cAAc;QACZ,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,eAAe,EAAE,CAAC;IACpE,CAAC;IACD,cAAc,CAAC,EAAE,EAAE,MAAM;QACvB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACzD,CAAC;IACD,cAAc,CAAC,EAAE;QACf,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;IACnD,CAAC;;sEAbU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;;;;;;;;;;ACLD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE;QACR,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,mCAAmC;QAC/C,WAAW,EAAE,0CAA0C;QACvD,SAAS,EAAE,mBAAmB;QAC9B,aAAa,EAAE,+BAA+B;QAC9C,iBAAiB,EAAE,aAAa;QAChC,KAAK,EAAE,0CAA0C;QACjD,aAAa,EAAE,cAAc;KAC9B;CACF,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACzBnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;;ICsCxC,yEACE;IAAA,0EACE;IAAA,wEAAe;IAAA,uDAAa;IAAA,4DAAI;IAClC,4DAAM;IACR,4DAAM;;;IAFa,0DAAa;IAAb,+EAAa;;;;IAQ5B,0EACE;IAAA,0EACE;IAAA,sEAAK;IAAA,oEAAG;IAAA,+DAAI;IAAA,4DAAI;IAAA,4DAAM;IACtB,0EAAuB;IAAA,uDAAY;IAAA,4DAAM;IACzC,sEAAK;IAAA,oEAAG;IAAA,8DAAG;IAAA,4DAAI;IAAA,4DAAM;IACrB,2EAAuB;IAAA,wDAAW;IAAA,4DAAM;IACxC,uEAAK;IAAA,qEAAG;IAAA,mEAAO;IAAA,4DAAI;IAAA,4DAAM;IACzB,2EAAuB;IAAA,wDAAe;IAAA,4DAAM;IAC5C,2EACE;IAAA,8EACE;IADmC,wTAAoB,IAAI,IAAC;IAC5D,kEACF;IAAA,4DAAS;IACT,8EACE;IAD6B,kZAAsB;IACnD,oEACF;IAAA,4DAAS;IACX,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IAdqB,0DAAY;IAAZ,0EAAY;IAEZ,0DAAW;IAAX,yEAAW;IAEX,0DAAe;IAAf,6EAAe;;;;IAW1C,0EACE;IAAA,0EACE;IAAA,0EAAwB;IAAA,wEAAa;IAAA,4DAAM;IAC3C,0EACE;IAAA,yEACE;IAAA,0EACE;IAAA,sEAAK;IAAA,+DAAI;IAAA,4DAAM;IACf,2EAOF;IAAA,4DAAM;IACN,2EACE;IAAA,uEAAK;IAAA,+DAAG;IAAA,4DAAM;IACd,4EAOF;IAAA,4DAAM;IACN,2EACE;IAAA,uEAAK;IAAA,mEAAO;IAAA,4DAAM;IAClB,4EAOF;IAAA,4DAAM;IACN,2EACE;IAAA,8EAOE;IALA,yqBAGH,KACf,IADmB;IAED,kEACF;IAAA,4DAAS;IACT,8EACE;IAD6B,yTAAoB,KAAK,IAAC;IACvD,oEACF;IAAA,4DAAS;IACX,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IAzCM,0DAAoB;IAApB,uFAAoB;IAUpB,0DAAmB;IAAnB,sFAAmB;IAUnB,0DAAuB;IAAvB,0FAAuB;;;IAlDrC,0EACE;IAAA,iHAiBM;IACN,iHAoDM;IACR,4DAAM;;;IAvEe,0DAAe;IAAf,8EAAe;IAkBf,0DAAc;IAAd,6EAAc;;AD1DhC,MAAM,YAAY;IAOvB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAN5C,UAAK,GAAG,UAAU,CAAC;IAM4B,CAAC;IAChD,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE;gBAC7B,OAAO;oBACL,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;oBACpB,MAAM,EAAE,KAAK;oBACb,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC;oBAClC,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;oBAChC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC;iBACzC,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IACD,YAAY;QACV,MAAM,MAAM,GAAG;YACb,IAAI,EAAE,IAAI,CAAC,YAAY;YACvB,GAAG,EAAE,IAAI,CAAC,WAAW;YACrB,OAAO,EAAE,IAAI,CAAC,eAAe;SAC9B,CAAC;QACF,IAAI,CAAC,WAAW;aACb,iBAAiB,CAAC,MAAM,CAAC;aACzB,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YACZ,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC1B,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC;QACnC,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACtC,CAAC;IACD,MAAM,CAAC,EAAE;QACP,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;IACtC,CAAC;IACD,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,OAAO;QAC3B,MAAM,MAAM,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;QAC1D,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;IAC9C,CAAC;;wEA5CU,YAAY;4FAAZ,YAAY;QCRzB,yEACE;QAAA,oEAEM;QACN,yEACE;QAAA,2EAMF;QAFI,sLAA0B;QAJ5B,4DAMF;QAAA,4DAAM;QACN,yEACE;QAAA,2EAOF;QAHI,qLAAyB;QAJ3B,4DAOF;QAAA,4DAAM;QACN,yEACE;QAAA,2EAMF;QAFI,yLAA6B;QAJ/B,4DAMF;QAAA,4DAAM;QACN,yEACE;QAAA,4EAKE;QAFA,oIAAS,kBAAc,IAAC;QAExB,6EACF;QAAA,4DAAS;QACX,4DAAM;QACN,0GAIM;QACN,0EACE;QAAA,0EACE;QAAA,sEAAI;QAAA,6EAAiB;QAAA,4DAAK;QAC5B,4DAAM;QACN,2GAwEM;QACR,4DAAM;QACR,4DAAM;;QAhHA,0DAA0B;QAA1B,qFAA0B;QAQ1B,0DAAyB;QAAzB,oFAAyB;QASzB,0DAA6B;QAA7B,wFAA6B;QAM7B,0DAA8D;QAA9D,mIAA8D;QAM5D,0DAAa;QAAb,6EAAa;QASwB,0DAAW;QAAX,iFAAW;;6FDvC3C,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4D;AACF;AACjB;AAEe;AACT;AACG;AACe;AACE;AACtB;;;AAetC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YARJ;YACP,uEAAa;YACb,oEAAgB;YAChB,+DAAiB,CAAC,aAAa,CAAC,qEAAW,CAAC,QAAQ,CAAC;YACrD,gFAAyB;YACzB,8EAAsB;YACtB,0DAAW;SACZ;mIAIU,SAAS,mBAZL,2DAAY,aAEzB,uEAAa;QACb,oEAAgB,mEAEhB,gFAAyB;QACzB,8EAAsB;QACtB,0DAAW;6FAKF,SAAS;cAbrB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,2DAAY,CAAC;gBAC5B,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,+DAAiB,CAAC,aAAa,CAAC,qEAAW,CAAC,QAAQ,CAAC;oBACrD,gFAAyB;oBACzB,8EAAsB;oBACtB,0DAAW;iBACZ;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACvBD;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Observable, of } from 'rxjs';\n@Injectable({\n  providedIn: 'root',\n})\nexport class CrudService {\n  constructor(private fireservices: AngularFirestore) {}\n  createNewEmployee(Record): any {\n    return this.fireservices.collection('Employee').add(Record);\n  }\n  getAllEmployee(): any {\n    return this.fireservices.collection('Employee').snapshotChanges();\n  }\n  updateEmployee(id, record): void {\n    this.fireservices.doc('Employee/' + id).update(record);\n  }\n  deleteEmployee(id): void {\n    this.fireservices.doc('Employee/' + id).delete();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyCxBhM2OUYVXmDJLfGw6sCjTbh91aSp9mI',\n    authDomain: 'angularcrud-8547f.firebaseapp.com',\n    databaseURL: 'https://angularcrud-8547f.firebaseio.com',\n    projectId: 'angularcrud-8547f',\n    storageBucket: 'angularcrud-8547f.appspot.com',\n    messagingSenderId: '53377133017',\n    appId: '1:53377133017:web:c8fc0cae9c658f2c5911c8',\n    measurementId: 'G-YE5BZ314LM',\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { CrudService } from './service/crud.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'firebase';\n  employeeName: string;\n  employeeAge: number;\n  employeeAddress: string;\n  message: string;\n  employee: any;\n  constructor(private crudService: CrudService) {}\n  ngOnInit(): void {\n    this.crudService.getAllEmployee().subscribe((data) => {\n      this.employee = data.map((e) => {\n        return {\n          id: e.payload.doc.id,\n          isEdit: false,\n          name: e.payload.doc.data()['Name'],\n          age: e.payload.doc.data()['Age'],\n          address: e.payload.doc.data()['Address'],\n        };\n      });\n    });\n  }\n  createRecord(): void {\n    const Record = {\n      Name: this.employeeName,\n      Age: this.employeeAge,\n      Address: this.employeeAddress,\n    };\n    this.crudService\n      .createNewEmployee(Record)\n      .then((res) => {\n        this.employeeName = '';\n        this.employeeAddress = '';\n        this.employeeAge = undefined;\n        console.log(res);\n        this.message = 'Created success';\n      })\n      .catch((err) => console.log(err));\n  }\n  delete(id): void {\n    this.crudService.deleteEmployee(id);\n  }\n  update(id, name, age, address): void {\n    const record = { Name: name, Age: age, Address: address };\n    this.crudService.updateEmployee(id, record);\n  }\n}\n","<div class=\"container\">\n  <div class=\"row justify-content-center p-2\">\n    <!-- <h1>Angular CRUD app</h1> -->\n  </div>\n  <div class=\"form-group\">\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Enter employee name\"\n      [(ngModel)]=\"employeeName\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <input\n      type=\"number\"\n      class=\"form-control\"\n      placeholder=\"Enter employee age\"\n      [(ngModel)]=\"employeeAge\"\n      min=\"0\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Enter employee address\"\n      [(ngModel)]=\"employeeAddress\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <button\n      class=\"btn btn-primary\"\n      [disabled]=\"!employeeAddress || !employeeName || !employeeAge\"\n      (click)=\"createRecord()\"\n    >\n      Create employee\n    </button>\n  </div>\n  <div *ngIf=\"message\" class=\"form-group\">\n    <div class=\"alert alert-success\">\n      <p class=\"m-0\">{{ message }}</p>\n    </div>\n  </div>\n  <div class=\"row p-2\">\n    <div class=\"col-md-12 p-2 justify-content-center\">\n      <h4>All Employee Data</h4>\n    </div>\n    <div class=\"col-md-3 mt-2\" *ngFor=\"let e of employee\">\n      <div class=\"card\" *ngIf=\"!e.isEdit\">\n        <div class=\"card-body\">\n          <div><b>Name</b></div>\n          <div class=\"card-text\">{{ e.name }}</div>\n          <div><b>Age</b></div>\n          <div class=\"card-text\">{{ e.age }}</div>\n          <div><b>Address</b></div>\n          <div class=\"card-text\">{{ e.address }}</div>\n          <div class=\"mt-1\">\n            <button class=\"btn btn-success mr-1\" (click)=\"e.isEdit = true\">\n              Edit\n            </button>\n            <button class=\"btn btn-danger\" (click)=\"delete(e.id)\">\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"card\" *ngIf=\"e.isEdit\">\n        <div class=\"card-body\">\n          <div class=\"card-title\">Edit employee</div>\n          <div class=\"row\">\n            <div class=\"form-group\">\n              <div class=\"col-md-12\">\n                <div>Name</div>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Enter employee name\"\n                  value=\"{{ e.name }}\"\n                  #name\n                />\n              </div>\n              <div class=\"col-md-12 mt-1\">\n                <div>Age</div>\n                <input\n                  type=\"number\"\n                  class=\"form-control\"\n                  placeholder=\"Enter employee age\"\n                  value=\"{{ e.age }}\"\n                  #age\n                />\n              </div>\n              <div class=\"col-md-12 mt-1\">\n                <div>Address</div>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Enter employee address\"\n                  value=\"{{ e.address }}\"\n                  #address\n                />\n              </div>\n              <div class=\"col-md-12 mt-1\">\n                <button\n                  class=\"btn btn-primary mr-1\"\n                  (click)=\"\n                    update(e.id, name.value, age.value, address.value);\n                    e.isEdit = false\n                  \"\n                >\n                  Save\n                </button>\n                <button class=\"btn btn-danger\" (click)=\"e.isEdit = false\">\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { environment } from './../environments/environment';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule,\n    AngularFirestoreModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}