{"version":3,"sources":["./src/environments/environment.ts","./src/app/chart/chart.component.ts","./src/app/chart/chart.component.html","./src/app/worldwide/worldwide.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/map/map.component.ts","./src/app/map/map.component.html","./src/app/worldwide/worldwide.component.ts","./src/app/worldwide/worldwide.component.html","./src/app/regional/regional.service.ts","./src/app/regional/regional.component.ts","./src/app/regional/regional.component.html","./src/app/app-routing.module.ts","./src/app/chart/chart.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, NgModule, Input } from '@angular/core';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { ChartService } from './chart.service';\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.scss'],\n})\nexport class ChartComponent implements OnInit {\n  data;\n  init = true;\n  fixedData = [\n    {\n      name: 'Confirmed',\n      series: [],\n    },\n    {\n      name: 'Deaths',\n      series: [],\n    },\n    {\n      name: 'Recovered',\n      series: [],\n    },\n  ];\n  test = [];\n  multi: any[];\n  view: any[];\n\n  // options\n  legendTitle = '';\n  legend = true;\n  showLabels = true;\n  animations = true;\n  xAxis = true;\n  yAxis = true;\n  showYAxisLabel = true;\n  showXAxisLabel = true;\n  timeline = true;\n  legendPosition = 'below';\n\n  colorScheme = {\n    domain: ['#5746a7', '#c6405d', '#2f7a68'],\n  };\n\n  constructor(private chartService: ChartService) {}\n  change(chosenCountry) {\n    if (this.init) {\n      this.init = false;\n      this.chartService.getData().subscribe((data) => {\n        this.data = [...data];\n        this.testObject(data[chosenCountry.index].timeseries);\n      });\n    } else {\n      this.testObject(this.data[chosenCountry.index].timeseries);\n    }\n  }\n  ngOnInit(): void {}\n  onSelect(event): void {}\n\n  testObject(data): void {\n    this.fixedData[0].series.length = 0;\n    this.fixedData[1].series.length = 0;\n    this.fixedData[2].series.length = 0;\n    for (const i in data) {\n      if (data.hasOwnProperty(i)) {\n        if (data[i].confirmed > -1 && data[i].deaths > -1) {\n          this.fixedData[0].series.push({ name: i, value: data[i].confirmed });\n          this.fixedData[1].series.push({ name: i, value: data[i].deaths });\n        }\n\n        this.fixedData[2].series.push({ name: i, value: data[i].recovered });\n      }\n    }\n    this.test = [...this.fixedData];\n  }\n}\n","<div #chartcontainer class=\"chartcontainer\">\n  <ngx-charts-line-chart\n    [view]=\"[chartcontainer.offsetWidth, chartcontainer.offsetHeight - 32]\"\n    [scheme]=\"colorScheme\"\n    [legend]=\"legend\"\n    [showXAxisLabel]=\"showXAxisLabel\"\n    [showYAxisLabel]=\"showYAxisLabel\"\n    [xAxis]=\"xAxis\"\n    [yAxis]=\"yAxis\"\n    [timeline]=\"timeline\"\n    [results]=\"test\"\n    [legendPosition]=\"legendPosition\"\n    [legendTitle]=\"legendTitle\"\n    (select)=\"onSelect($event)\"\n  >\n  </ngx-charts-line-chart>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WorldwideService {\n  constructor(private http: HttpClient) {}\n  getWorldWideData(): any {\n    return this.http.get(\n      'https://master-covid-19-api-laeyoung.endpoint.ainize.ai/jhu-edu/brief'\n    );\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'covidmock1';\n  chosenCountry = {};\n  childEvent(event): void {\n    this.chosenCountry = { ...event };\n  }\n}\n","<app-worldwide></app-worldwide>\n<app-regional\n  (eventChange)=\"childEvent($event); chart.change(chosenCountry)\"\n></app-regional>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-12 col-md-6\"><app-map></app-map></div>\n    <div class=\"col-12 col-md-6\">\n      <app-chart #chart></app-chart>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WorldwideComponent } from './worldwide/worldwide.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RegionalComponent } from './regional/regional.component';\nimport { MapComponent } from './map/map.component';\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\nimport { ChartComponent } from './chart/chart.component';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n// import { NgxGraphModule } from '@swimlane/ngx-graph';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WorldwideComponent,\n    RegionalComponent,\n    MapComponent,\n    ChartComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    LeafletModule,\n    FormsModule,\n    NgxChartsModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { WorldwideService } from './../worldwide/worldwide.service';\nimport { Component, OnInit } from '@angular/core';\nimport * as L from 'leaflet';\nimport 'leaflet.heat/dist/leaflet-heat.js';\nimport { RegionalService } from '../regional/regional.service';\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss'],\n})\nexport class MapComponent implements OnInit {\n  addressPoints = [];\n  // options = {\n  //   layers: [\n  //     L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  //       maxZoom: 18,\n  //       attribution: '',\n  //     }),\n  //   ],\n  //   zoom: 5,\n  //   center: L.latLng(21.0278, 105.8342),\n  //   worldCopyJump: true,\n  // };\n  options = {\n    layers: [\n      L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        maxZoom: 18,\n        // attribution: '...',\n      }),\n    ],\n    zoom: 5,\n    center: L.latLng(21.0278, 105.8342),\n    worldCopyJump: true,\n  };\n  layersControl = {\n    baseLayers: {\n      'Open Street Map': L.tileLayer(\n        'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n        { maxZoom: 18, attribution: '...' }\n      ),\n      'Open Cycle Map': L.tileLayer(\n        'http://{s}.tile.opencyclemap.org/cycle/{z}/{x}/{y}.png',\n        { maxZoom: 18, attribution: '...' }\n      ),\n    },\n    // overlays: {\n    //   'Big Circle': L.circle([46.95, -122], { radius: 5000 }),\n    //   'Big Square': L.polygon([\n    //     [46.8, -121.55],\n    //     [46.9, -121.55],\n    //     [46.9, -121.7],\n    //     [46.8, -121.7],\n    //   ]),\n    // },\n  };\n  layers = [];\n  confirmed;\n  constructor(\n    private regionService: RegionalService,\n    private wwService: WorldwideService\n  ) {}\n\n  ngOnInit(): void {\n    this.wwService.getWorldWideData().subscribe((data) => {\n      this.confirmed = data.confirmed;\n    });\n    if (this.regionService.getData()) {\n      this.regionService.getData().subscribe((data) => {\n        let limit = 500000;\n        data.forEach((country) => {\n          if (country.confirmed)\n            this.layers.push(\n              L.circle([country.location.lat, country.location.lng], {\n                radius:\n                  country.confirmed > limit\n                    ? limit\n                    : country.confirmed < 50000\n                    ? 50000\n                    : country.confirmed,\n                color: 'red',\n                // opacity: 0.5,\n                stroke: false,\n              })\n            );\n          // this.addressPoints.push([\n          //   country.location.lat,\n          //   country.location.lng,\n          //   country.confirmed,\n          // ]);\n        });\n      });\n    }\n  }\n  onMapReady(map): void {\n    // const heat = (L as any).heatLayer(this.addressPoints).addTo(map);\n  }\n}\n","<!-- <div\n  style=\"height: 50vh\"\n  leaflet\n  [leafletOptions]=\"options\"\n  (leafletMapReady)=\"onMapReady($event)\"\n></div> -->\n<div\n  style=\"height: 50vh\"\n  leaflet\n  [leafletOptions]=\"options\"\n  [leafletLayersControl]=\"layersControl\"\n  [leafletLayers]=\"layers\"\n></div>\n","import { WorldwideService } from './worldwide.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-worldwide',\n  templateUrl: './worldwide.component.html',\n  styleUrls: ['./worldwide.component.scss'],\n})\nexport class WorldwideComponent implements OnInit {\n  constructor(private wwService: WorldwideService) {}\n  wwData = { rate: 0, recovered: 0, deaths: 0, confirmed: 0 };\n  ngOnInit(): void {\n    this.wwService.getWorldWideData().subscribe((data) => {\n      this.wwData = { ...data };\n      this.wwData['rate'] = (this.wwData.deaths / this.wwData.confirmed) * 100;\n    });\n  }\n}\n","<div class=\"container mt-5\">\n  <div class=\"row\">\n    <div class=\"col-12\"><h3>World Wide</h3></div>\n    <div class=\"col-12 col-md-3\">\n      <div class=\"card text-white confirmed mb-3\">\n        <div class=\"card-body\">\n          <div class=\"card-text\">\n            <i class=\"fas fa-user-alt\">&nbsp;</i>Confirmed\n          </div>\n          <h5 class=\"card-title m-0\">{{ wwData.confirmed | number: \"2.\" }}</h5>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 col-md-3\">\n      <div class=\"card text-white recovered mb-3\">\n        <div class=\"card-body\">\n          <div class=\"card-text\">\n            <i class=\"fas fa-plus-square\">&nbsp;</i>Recovered\n          </div>\n          <h5 class=\"card-title m-0\">{{ wwData.recovered | number: \"2.\" }}</h5>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 col-md-3\">\n      <div class=\"card text-white deaths mb-3\">\n        <div class=\"card-body\">\n          <div class=\"card-text\"><i class=\"fas fa-bed\">&nbsp;</i>Deaths</div>\n          <h5 class=\"card-title m-0\">{{ wwData.deaths | number: \"2.\" }}</h5>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 col-md-3\">\n      <div class=\"card text-white rate mb-3\">\n        <div class=\"card-body\">\n          <div class=\"card-text\">\n            <i class=\"fas fa-exclamation-circle\">&nbsp;</i>Fatality rate\n          </div>\n          <h5 class=\"card-title m-0\">{{ wwData.rate | number: \"1.0-2\" }}%</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RegionalService {\n  constructor(private http: HttpClient) {}\n  getData(): any {\n    return this.http.get(\n      'https://master-covid-19-api-laeyoung.endpoint.ainize.ai/jhu-edu/latest'\n    );\n  }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { RegionalService } from './regional.service';\n\n@Component({\n  selector: 'app-regional',\n  templateUrl: './regional.component.html',\n  styleUrls: ['./regional.component.scss'],\n})\nexport class RegionalComponent implements OnInit {\n  @Output() eventChange = new EventEmitter<any>();\n  constructor(private regionService: RegionalService) {}\n  countryArray = [];\n  chosenCountry = {};\n  ngOnInit(): void {\n    this.regionService.getData().subscribe((data) => {\n      this.countryArray = [...data];\n      let index = data.findIndex(\n        (country) => country.countryregion === 'Vietnam'\n      );\n      this.chosenCountry = data[index];\n      this.chosenCountry['index'] = index;\n      data[index]['index'] = index;\n      this.eventChange.emit(data[index]);\n    });\n  }\n  setRegion(i) {\n    this.chosenCountry = { ...this.countryArray[i] };\n    this.chosenCountry['index'] = i;\n  }\n  onChange() {\n    this.eventChange.emit(this.chosenCountry);\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-12 col-md-3\"><h3>Regional</h3></div>\n    <div class=\"col-12 col-md-9\">\n      <select\n        class=\"form-control\"\n        (change)=\"setRegion($event.target.value); onChange()\"\n      >\n        <option\n          *ngFor=\"let country of countryArray; let i = index\"\n          value=\"{{ i }}\"\n          [selected]=\"chosenCountry.index === i\"\n        >\n          {{\n            country.provincestate\n              ? country.countryregion + \" (\" + country.provincestate + \")\"\n              : country.countryregion\n          }}\n        </option>\n      </select>\n    </div>\n  </div>\n  <div class=\"row mt-3\" *ngIf=\"chosenCountry\">\n    <div class=\"col-12 col-md-3\">\n      <div class=\"card text-white confirmed mb-3\">\n        <div class=\"card-body\">\n          <div class=\"card-text\">\n            <i class=\"fas fa-user-alt\">&nbsp;</i>Confirmed\n          </div>\n          <h5 class=\"card-title m-0\">\n            {{ chosenCountry.confirmed | number: \"2.\" }}\n          </h5>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 col-md-3\">\n      <div class=\"card text-white recovered mb-3\">\n        <div class=\"card-body\">\n          <div class=\"card-text\">\n            <i class=\"fas fa-plus-square\">&nbsp;</i>Recovered\n          </div>\n          <h5 class=\"card-title m-0\">\n            {{ chosenCountry.recovered | number: \"2.\" }}\n          </h5>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 col-md-3\">\n      <div class=\"card text-white deaths mb-3\">\n        <div class=\"card-body\">\n          <div class=\"card-text\"><i class=\"fas fa-bed\">&nbsp;</i>Deaths</div>\n          <h5 class=\"card-title m-0\">\n            {{ chosenCountry.deaths | number: \"2.\" }}\n          </h5>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 col-md-3\">\n      <div class=\"card text-white rate mb-3\">\n        <div class=\"card-body\">\n          <div class=\"card-text\">\n            <i class=\"fas fa-exclamation-circle\">&nbsp;</i>Fatality rate\n          </div>\n          <h5 class=\"card-title m-0\">\n            {{\n              (chosenCountry.deaths / chosenCountry.confirmed) * 100\n                | number: \"1.0-2\"\n            }}%\n          </h5>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChartService {\n  constructor(private http: HttpClient) {}\n  getData(): any {\n    return this.http.get<any[]>(\n      'https://master-covid-19-api-laeyoung.endpoint.ainize.ai/jhu-edu/timeseries'\n    );\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}