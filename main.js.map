{"version":3,"sources":["./src/environments/environment.ts","./src/app/chart/chart.component.ts","./src/app/chart/chart.component.html","./src/app/worldwide/worldwide.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/map/map.component.ts","./src/app/map/map.component.html","./src/app/worldwide/worldwide.component.ts","./src/app/worldwide/worldwide.component.html","./src/app/regional/regional.service.ts","./src/app/regional/regional.component.ts","./src/app/regional/regional.component.html","./src/app/app-routing.module.ts","./src/app/chart/chart.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit, NgModule, Input } from '@angular/core';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport { ChartService } from './chart.service';\r\n\r\n@Component({\r\n  selector: 'app-chart',\r\n  templateUrl: './chart.component.html',\r\n  styleUrls: ['./chart.component.scss'],\r\n})\r\nexport class ChartComponent implements OnInit {\r\n  fixedData = [\r\n    {\r\n      name: 'Confirmed',\r\n      series: [],\r\n    },\r\n    {\r\n      name: 'Deaths',\r\n      series: [],\r\n    },\r\n    {\r\n      name: 'Recovered',\r\n      series: [],\r\n    },\r\n  ];\r\n  test = [];\r\n  multi: any[];\r\n  view: any[] = [550, 350];\r\n\r\n  // options\r\n  legend = true;\r\n  showLabels = true;\r\n  animations = true;\r\n  xAxis = true;\r\n  yAxis = true;\r\n  showYAxisLabel = true;\r\n  showXAxisLabel = true;\r\n  timeline = true;\r\n  legendPosition = 'below';\r\n\r\n  colorScheme = {\r\n    domain: ['#5746a7', '#c6405d', '#2f7a68'],\r\n  };\r\n\r\n  constructor(private chartService: ChartService) {}\r\n  change(chosenCountry) {\r\n    // this.chartService\r\n    //   .getData(chosenCountry.countrycode.iso2)\r\n    //   .subscribe((data) => {\r\n    //     console.log(data);\r\n    //     let index=data.findIndex((elem)=>{\r\n    //       return elem.provincestate===chosenCountry.provincestate;\r\n    //     })\r\n    //     this.testObject(data[index].timeseries);\r\n    //   });\r\n    this.chartService.getData2().subscribe((data) => {\r\n      // console.log(index);\r\n\r\n      // console.log(chosenCountry);\r\n      this.testObject(data[chosenCountry.index].timeseries);\r\n    });\r\n  }\r\n  ngOnInit(): void {}\r\n  onSelect(event): void {}\r\n\r\n  testObject(data): void {\r\n    this.fixedData[0].series.length = 0;\r\n    this.fixedData[1].series.length = 0;\r\n    this.fixedData[2].series.length = 0;\r\n    for (const i in data) {\r\n      if (data.hasOwnProperty(i)) {\r\n        this.fixedData[0].series.push({ name: i, value: data[i].confirmed });\r\n        this.fixedData[1].series.push({ name: i, value: data[i].deaths });\r\n        this.fixedData[2].series.push({ name: i, value: data[i].recovered });\r\n      }\r\n    }\r\n    this.test = [...this.fixedData];\r\n  }\r\n}\r\n","<ngx-charts-line-chart\r\n  [view]=\"view\"\r\n  [scheme]=\"colorScheme\"\r\n  [legend]=\"legend\"\r\n  [showXAxisLabel]=\"showXAxisLabel\"\r\n  [showYAxisLabel]=\"showYAxisLabel\"\r\n  [xAxis]=\"xAxis\"\r\n  [yAxis]=\"yAxis\"\r\n  [timeline]=\"timeline\"\r\n  [results]=\"test\"\r\n  [legendPosition]=\"legendPosition\"\r\n  (select)=\"onSelect($event)\"\r\n>\r\n</ngx-charts-line-chart>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class WorldwideService {\r\n  constructor(private http: HttpClient) {}\r\n  getWorldWideData(): any {\r\n    return this.http.get(\r\n      'https://master-covid-19-api-laeyoung.endpoint.ainize.ai/jhu-edu/brief'\r\n    );\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  title = 'covidmock1';\r\n  chosenCountry = {};\r\n  childEvent(event): void {\r\n    this.chosenCountry = { ...event };\r\n  }\r\n}\r\n","<app-worldwide></app-worldwide>\r\n<app-regional\r\n  (eventChange)=\"childEvent($event); chart.change(chosenCountry)\"\r\n></app-regional>\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-6\"><app-map></app-map></div>\r\n    <div class=\"col-6\">\r\n      <app-chart #chart></app-chart>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { WorldwideComponent } from './worldwide/worldwide.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RegionalComponent } from './regional/regional.component';\r\nimport { MapComponent } from './map/map.component';\r\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\r\nimport { ChartComponent } from './chart/chart.component';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\n// import { NgxGraphModule } from '@swimlane/ngx-graph';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    WorldwideComponent,\r\n    RegionalComponent,\r\n    MapComponent,\r\n    ChartComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    LeafletModule,\r\n    FormsModule,\r\n    NgxChartsModule,\r\n    BrowserAnimationsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { WorldwideService } from './../worldwide/worldwide.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.heat/dist/leaflet-heat.js';\r\nimport { RegionalService } from '../regional/regional.service';\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.scss'],\r\n})\r\nexport class MapComponent implements OnInit {\r\n  addressPoints = [];\r\n  // options = {\r\n  //   layers: [\r\n  //     L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n  //       maxZoom: 18,\r\n  //       attribution: '',\r\n  //     }),\r\n  //   ],\r\n  //   zoom: 5,\r\n  //   center: L.latLng(21.0278, 105.8342),\r\n  //   worldCopyJump: true,\r\n  // };\r\n  options = {\r\n    layers: [\r\n      L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        maxZoom: 18,\r\n        attribution: '...',\r\n      }),\r\n    ],\r\n    zoom: 5,\r\n    center: L.latLng(21.0278, 105.8342),\r\n    worldCopyJump: true,\r\n  };\r\n  layersControl = {\r\n    baseLayers: {\r\n      'Open Street Map': L.tileLayer(\r\n        'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n        { maxZoom: 18, attribution: '...' }\r\n      ),\r\n      'Open Cycle Map': L.tileLayer(\r\n        'https://tile.thunderforest.com/cycle/{z}/{x}/{y}.png?apikey=6b86848811d8427eabdfc50d60a1d547',\r\n        { maxZoom: 18, attribution: '...' }\r\n      ),\r\n    },\r\n    // overlays: {\r\n    //   'Big Circle': L.circle([46.95, -122], { radius: 5000 }),\r\n    //   'Big Square': L.polygon([\r\n    //     [46.8, -121.55],\r\n    //     [46.9, -121.55],\r\n    //     [46.9, -121.7],\r\n    //     [46.8, -121.7],\r\n    //   ]),\r\n    // },\r\n  };\r\n  layers = [];\r\n  confirmed;\r\n  constructor(\r\n    private regionService: RegionalService,\r\n    private wwService: WorldwideService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.wwService.getWorldWideData().subscribe((data) => {\r\n      this.confirmed = data.confirmed;\r\n    });\r\n    this.regionService.getData().subscribe((data) => {\r\n      data.forEach((country) => {\r\n        this.layers.push(\r\n          L.circle([country.location.lat, country.location.lng], {\r\n            radius: 200000,\r\n            color: 'red',\r\n            // opacity: country.confirmed / 10,\r\n          })\r\n        );\r\n        // this.addressPoints.push([\r\n        //   country.location.lat,\r\n        //   country.location.lng,\r\n        //   country.confirmed,\r\n        // ]);\r\n      });\r\n    });\r\n  }\r\n  onMapReady(map): void {\r\n    // const heat = (L as any).heatLayer(this.addressPoints).addTo(map);\r\n  }\r\n}\r\n","<!-- <div\r\n  style=\"height: 50vh\"\r\n  leaflet\r\n  [leafletOptions]=\"options\"\r\n  (leafletMapReady)=\"onMapReady($event)\"\r\n></div> -->\r\n<div\r\n  style=\"height: 300px\"\r\n  leaflet\r\n  [leafletOptions]=\"options\"\r\n  [leafletLayersControl]=\"layersControl\"\r\n  [leafletLayers]=\"layers\"\r\n></div>\r\n","import { WorldwideService } from './worldwide.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-worldwide',\r\n  templateUrl: './worldwide.component.html',\r\n  styleUrls: ['./worldwide.component.scss'],\r\n})\r\nexport class WorldwideComponent implements OnInit {\r\n  constructor(private wwService: WorldwideService) {}\r\n  wwData = { rate: 0, recovered: 0, deaths: 0, confirmed: 0 };\r\n  ngOnInit(): void {\r\n    this.wwService.getWorldWideData().subscribe((data) => {\r\n      this.wwData = { ...data };\r\n      this.wwData['rate'] = (this.wwData.deaths / this.wwData.confirmed) * 100;\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12\"><h3>World Wide</h3></div>\r\n\r\n    <div class=\"col-3\">\r\n      <div class=\"card text-white confirmed mb-3\">\r\n        <div class=\"card-body\">\r\n          <div class=\"card-text\">\r\n            <i class=\"fas fa-user-alt\">&nbsp;</i>Confirmed\r\n          </div>\r\n          <h5 class=\"card-title m-0\">{{ wwData.confirmed | number: \"2.\" }}</h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-3\">\r\n      <div class=\"card text-white recovered mb-3\">\r\n        <div class=\"card-body\">\r\n          <div class=\"card-text\">\r\n            <i class=\"fas fa-plus-square\">&nbsp;</i>Recovered\r\n          </div>\r\n          <h5 class=\"card-title m-0\">{{ wwData.recovered | number: \"2.\" }}</h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-3\">\r\n      <div class=\"card text-white deaths mb-3\">\r\n        <div class=\"card-body\">\r\n          <div class=\"card-text\"><i class=\"fas fa-bed\">&nbsp;</i>Deaths</div>\r\n          <h5 class=\"card-title m-0\">{{ wwData.deaths | number: \"2.\" }}</h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-3\">\r\n      <div class=\"card text-white rate mb-3\">\r\n        <div class=\"card-body\">\r\n          <div class=\"card-text\">\r\n            <i class=\"fas fa-exclamation-circle\">&nbsp;</i>Fatality rate\r\n          </div>\r\n          <h5 class=\"card-title m-0\">{{ wwData.rate | number: \"1.0-2\" }}%</h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RegionalService {\r\n  constructor(private http: HttpClient) {}\r\n  getData(): any {\r\n    return this.http.get(\r\n      'https://master-covid-19-api-laeyoung.endpoint.ainize.ai/jhu-edu/latest'\r\n    );\r\n  }\r\n}\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { RegionalService } from './regional.service';\r\n\r\n@Component({\r\n  selector: 'app-regional',\r\n  templateUrl: './regional.component.html',\r\n  styleUrls: ['./regional.component.scss'],\r\n})\r\nexport class RegionalComponent implements OnInit {\r\n  @Output() eventChange = new EventEmitter<any>();\r\n  constructor(private regionService: RegionalService) {}\r\n  countryArray = [];\r\n  chosenCountry = {};\r\n  ngOnInit(): void {\r\n    this.regionService.getData().subscribe((data) => {\r\n      this.countryArray = [...data];\r\n      let index = data.findIndex(\r\n        (country) => country.countryregion === 'Vietnam'\r\n      );\r\n      this.chosenCountry = data[index];\r\n      this.chosenCountry['index'] = index;\r\n      data[index]['index'] = index;\r\n      this.eventChange.emit(data[index]);\r\n    });\r\n  }\r\n  setRegion(i) {\r\n    this.chosenCountry = { ...this.countryArray[i] };\r\n    this.chosenCountry['index'] = i;\r\n  }\r\n  onChange() {\r\n    this.eventChange.emit(this.chosenCountry);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-3\"><h3>Regional</h3></div>\r\n    <div class=\"col-9\">\r\n      <select\r\n        class=\"form-control\"\r\n        (change)=\"setRegion($event.target.value); onChange()\"\r\n      >\r\n        <option\r\n          *ngFor=\"let country of countryArray; let i = index\"\r\n          value=\"{{ i }}\"\r\n          [selected]=\"chosenCountry.countryregion === country.countryregion\"\r\n        >\r\n          {{\r\n            country.provincestate\r\n              ? country.countryregion + \" (\" + country.provincestate + \")\"\r\n              : country.countryregion\r\n          }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n  <div class=\"row mt-3\" *ngIf=\"chosenCountry\">\r\n    <div class=\"col-3\">\r\n      <div class=\"card text-white confirmed mb-3\">\r\n        <div class=\"card-body\">\r\n          <div class=\"card-text\">\r\n            <i class=\"fas fa-user-alt\">&nbsp;</i>Confirmed\r\n          </div>\r\n          <h5 class=\"card-title m-0\">\r\n            {{ chosenCountry.confirmed | number: \"2.\" }}\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-3\">\r\n      <div class=\"card text-white recovered mb-3\">\r\n        <div class=\"card-body\">\r\n          <div class=\"card-text\">\r\n            <i class=\"fas fa-plus-square\">&nbsp;</i>Recovered\r\n          </div>\r\n          <h5 class=\"card-title m-0\">\r\n            {{ chosenCountry.recovered | number: \"2.\" }}\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-3\">\r\n      <div class=\"card text-white deaths mb-3\">\r\n        <div class=\"card-body\">\r\n          <div class=\"card-text\"><i class=\"fas fa-bed\">&nbsp;</i>Deaths</div>\r\n          <h5 class=\"card-title m-0\">\r\n            {{ chosenCountry.deaths | number: \"2.\" }}\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-3\">\r\n      <div class=\"card text-white rate mb-3\">\r\n        <div class=\"card-body\">\r\n          <div class=\"card-text\">\r\n            <i class=\"fas fa-exclamation-circle\">&nbsp;</i>Fatality rate\r\n          </div>\r\n          <h5 class=\"card-title m-0\">\r\n            {{\r\n              (chosenCountry.deaths / chosenCountry.confirmed) * 100\r\n                | number: \"1.0-2\"\r\n            }}%\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ChartService {\r\n  constructor(private http: HttpClient) {}\r\n  getData(iso2) {\r\n    return this.http.get<any[]>(\r\n      'https://master-covid-19-api-laeyoung.endpoint.ainize.ai/jhu-edu/timeseries?iso2=' +\r\n        iso2 \r\n    );\r\n  }\r\n  getData2() {\r\n    return this.http.get<any[]>(\r\n      'https://master-covid-19-api-laeyoung.endpoint.ainize.ai/jhu-edu/timeseries'\r\n    );\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}